# smoker

![SMOKER](/nmurray/smoker/raw/master/doc/images/smoker.jpg)

Custom Hive UDFs, specifically for dealing with ATTi data.

## Usage

If you want to compile yourself you can:

       # wherever you have your code
       lein compile
       lein uberjar
       scp build/smoker-1.0.0-SNAPSHOT-standalone.jar myserver:~/hive-jars/smoker-standalone.jar

If you just want to download and use the binary, grab it from nexus:

       mkdir ~/hive-jars
       curl -0 http://svn2.wc1.yellowpages.com:9999/nexus/content/repositories/releases/com/atti/wdm/smoker/1.0.1/smoker-1.0.1.jar > ~/hive-jars/smoker-standalone.jar

Then use it within Hive:

       # on your server, start hive with auxpath
       hive --auxpath /home/nmurray/hive-jars

       # tell hive about your jars (possibly optional)
       add jar /home/nmurray/hive-jars/smoker-standalone.jar;
       list jars;

       # create your operations
       create temporary function my_lower as 'smoker.udf.MyLowerCase';
       select my_lower(listing_name) from listing_extract_vw where ds=20110101 limit 10;

## List of Operations

Lower-case. The "hello-world" of UDFs

       create temporary function my_lower as 'smoker.udf.MyLowerCase';
       select my_lower(listing_name) from listing_extract_vw where ds=20110101 limit 10;

Tokenize. The "hello-cruel-world" of UDTFs. UDFs emit a single record,
UDTFs can emit multiple records for a single input record.

       create temporary function tokenize as 'smoker.udf.MyTokenize';
       select tokenize(listing_name) AS (word, count) from listing_extract_vw where ds=20110101 limit 10;

Parse MDM URLs

       create temporary function parse_mdm_urls as 'smoker.udf.ParseMdmUrls';

       # get just the urls
       SELECT DISTINCT a.url FROM ( SELECT parse_mdm_urls(urls) AS (url) FROM mdm_listings WHERE ds=20110109 ) a;

       # or "join" with the id (this takes a long time)
       set hive.optimize.ppd=false; // see http://wiki.apache.org/hadoop/Hive/LanguageManual/LateralView
       SELECT id, url FROM mdm_listings LATERAL VIEW parse_mdm_urls(urls) urlTable AS url WHERE ds=20110109 LIMIT 10;
       set hive.optimize.ppd=true; // turn this back on or you'll be sorry when you try to use a WHERE clause

## Authors

* Nate Murray <nmurray@attinteractive.com>
* Bruce Holmes

## References

* [http://dev.bizo.com/2009/06/custom-udfs-and-hive.html](http://dev.bizo.com/2009/06/custom-udfs-and-hive.html)
* [http://dev.bizo.com/2010/07/extending-hive-with-custom-udtfs.html](http://dev.bizo.com/2010/07/extending-hive-with-custom-udtfs.html)
* [http://stackoverflow.com/questions/2181774/calling-clojure-from-java](http://stackoverflow.com/questions/2181774/calling-clojure-from-java)
* [http://kotka.de/blog/2010/03/proxy_gen-class_little_brother.html](http://kotka.de/blog/2010/03/proxy_gen-class_little_brother.html)
* [http://clojure.org/compilation](http://clojure.org/compilation)
* [http://asymmetrical-view.com/2009/07/02/clojure-primitive-arrays.html](http://asymmetrical-view.com/2009/07/02/clojure-primitive-arrays.html)
* [http://groups.google.com/group/clojure/browse_thread/thread/1f48e0d4f42e95fd/b578a1834f307b06](http://groups.google.com/group/clojure/browse_thread/thread/1f48e0d4f42e95fd/b578a1834f307b06)
* [https://github.com/stuartsierra/clojure-hadoop](https://github.com/stuartsierra/clojure-hadoop)
